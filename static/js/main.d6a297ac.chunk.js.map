{"version":3,"sources":["api/api.js","Pagination.js","App.js","index.js"],"names":["getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","posts","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","Pagination","state","page","_this","props","perPage","onSelectChange","value","_this$props","total","setPageCountItems","target","pageCount","Math","ceil","setState","_this$props2","num","changePage","_this2","controls","_loop","i","activeClassName","push","react_default","createElement","key","type","disabled","onClick","setCurrentPage","className","onChange","createControls","React","Component","App","current","onPageChange","loadData","then","postsData","_this$state","upperLimit","slice","_this$state2","createPaginatedData","map","child","id","title","body","length","src_Pagination","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d6a297ac.chunk.js","sourcesContent":["const baseUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = async() => {\n  const url = '/posts';\n  const response = await fetch(`${baseUrl}${url}`);\n  const posts = await response.json();\n\n  return posts;\n};\n\nexport default getPosts();\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nclass Pagination extends React.Component {\n  state = {\n    page: this.props.page,\n    perPage: this.props.perPage,\n  };\n\n  componentDidMount() {\n    const { total, perPage } = this.props;\n    let pageCount = total / perPage;\n\n    if (total % perPage > 0) { pageCount += 1; }\n\n    this.setState({\n      pageCount,\n    });\n  }\n\n  onSelectChange = (value) => {\n    const { total, setPageCountItems } = this.props;\n    const perPage = +value.target.value;\n    let pageCount = total / perPage;\n\n    pageCount = Math.ceil(pageCount);\n\n    this.setState({\n      pageCount,\n      page: 1,\n      perPage,\n    });\n    setPageCountItems(+value.target.value);\n  };\n\n  setCurrentPage(num) {\n    this.props.changePage(num);\n    this.setState({\n      page: num,\n    });\n  }\n\n  createControls() {\n    const controls = [];\n    const { pageCount } = this.state;\n\n    for (let i = 1; i <= pageCount; i += 1) {\n      const baseClassName = 'pagination-controls__button';\n      const activeClassName\n        = i === this.state.page\n          ? `${baseClassName}--active`\n          : '';\n\n      if (i === 1) {\n        controls.push(\n          <button\n            key=\"lowerPage\"\n            type=\"button\"\n            disabled={i === this.state.page}\n            onClick={() => this.setCurrentPage(this.state.page - 1)}\n          >\n            {`<`}\n          </button>\n        );\n      }\n\n      if (i === 1 && this.state.page > 2) {\n        controls.push(\n          <button\n            key=\"first\"\n            type=\"button\"\n            disabled={i === this.state.page}\n            onClick={() => this.setCurrentPage(1)}\n          >\n            {i}\n          </button>\n        );\n      }\n\n      if (i === 1 && this.state.page > 2) {\n        controls.push(`...`);\n      }\n\n      if (\n        i === this.state.page\n        || i === this.state.page - 1\n        || i === this.state.page + 1\n      ) {\n        controls.push(\n          <button\n            key={i}\n            type=\"button\"\n            className={`${baseClassName} ${activeClassName}`}\n            disabled={i === this.state.page}\n            onClick={() => this.setCurrentPage(i)}\n          >\n            {i}\n          </button>\n        );\n      }\n\n      if (\n        i === this.state.pageCount\n        && this.state.page < this.state.pageCount - 1\n      ) {\n        controls.push(`...`);\n      }\n\n      if (i === pageCount && this.state.page < this.state.pageCount - 1) {\n        controls.push(\n          <button\n            key=\"last\"\n            type=\"button\"\n            disabled={i === this.state.page}\n            onClick={() => this.setCurrentPage(this.state.pageCount)}\n          >\n            {i}\n          </button>\n        );\n      }\n\n      if (i === pageCount) {\n        controls.push(\n          <button\n            key=\"upperPage\"\n            type=\"button\"\n            disabled={i === this.state.page}\n            onClick={() => this.setCurrentPage(this.state.page + 1)}\n          >\n            {`>`}\n          </button>\n        );\n      }\n    }\n\n    return controls;\n  }\n\n  render() {\n    return (\n      <div className=\"pagination\">\n        <select\n          onChange={this.onSelectChange}\n          value={this.state.perPage}\n        >\n          <option value={3}>3</option>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={15}>15</option>\n        </select>\n        <div className=\"pagination-controls\">\n          {this.createControls()}\n        </div>\n        <span>\n          {\n            `${this.state.page * this.props.perPage - this.props.perPage + 1}\n             - ${\n      this.state.page * this.props.perPage <= this.props.total\n        ? this.state.page * this.props.perPage\n        : this.props.total\n      } of ${this.props.total}`\n          }\n        </span>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: propTypes.number.isRequired,\n  changePage: propTypes.func.isRequired,\n  setPageCountItems: propTypes.func.isRequired,\n  perPage: propTypes.number.isRequired,\n  page: propTypes.number.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport { getPosts } from './api/api';\nimport Pagination from './Pagination';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    current: 1,\n    perPage: 5,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  onPageChange = (num) => {\n    this.setState({\n      current: num,\n    });\n  };\n\n  setPageCountItems = (perPage) => {\n    this.setState({\n      perPage,\n      current: 1,\n    });\n  };\n\n  async loadData() {\n    await getPosts()\n      .then((postsData) => {\n        this.setState({\n          posts: postsData,\n        });\n      });\n  }\n\n  createPaginatedData() {\n    const { current, perPage, posts } = this.state;\n    const upperLimit = current * perPage;\n\n    return posts.slice((upperLimit - perPage), upperLimit);\n  }\n\n  render() {\n    const { posts, current } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"table_container\">\n          <table className=\"table\">\n            <thead />\n            <tbody>\n              {\n                this.createPaginatedData().map(child => (\n                  <tr>\n                    <td>{child.id}</td>\n                    <td>{child.title}</td>\n                    <td>{child.body}</td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        </div>\n        <nav className=\"nav\">\n          {\n            posts.length\n              ? (\n                <Pagination\n                  total={posts.length}\n                  page={current}\n                  perPage={this.state.perPage}\n                  changePage={this.onPageChange}\n                  setPageCountItems={this.setPageCountItems}\n                />\n              )\n              : []\n          }\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}